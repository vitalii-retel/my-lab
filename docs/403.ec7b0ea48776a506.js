"use strict";(self.webpackChunklab=self.webpackChunklab||[]).push([[403],{403:(g,c,i)=>{i.r(c),i.d(c,{GitComponent:()=>d});var a=i(814),e=i(946);const s=["*"];let u=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["ui-code"]],standalone:!0,features:[e.jDz],ngContentSelectors:s,decls:1,vars:0,template:function(t,r){1&t&&(e.F$t(),e.Hsn(0))},dependencies:[a.ez],styles:["[_nghost-%COMP%]{display:block;color:var(--c-main);background-color:var(--bg-light);border:.063em solid var(--cb-main);padding:.5em .938em;margin:.5em 0}"],changeDetection:0}),n})(),m=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["ui-heading"]],standalone:!0,features:[e.jDz],ngContentSelectors:s,decls:1,vars:0,template:function(t,r){1&t&&(e.F$t(),e.Hsn(0))},dependencies:[a.ez],styles:["[_nghost-%COMP%]{display:block;color:var(--c-main);font-size:1.5em;margin:.75em 0 .75em .667em}"],changeDetection:0}),n})(),l=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["ui-paragraph"]],standalone:!0,features:[e.jDz],ngContentSelectors:s,decls:1,vars:0,template:function(t,r){1&t&&(e.F$t(),e.Hsn(0))},dependencies:[a.ez],styles:["[_nghost-%COMP%]{display:block;color:var(--c-main);margin:.75em 0;text-indent:1em}"],changeDetection:0}),n})(),p=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["ui-title"]],standalone:!0,features:[e.jDz],ngContentSelectors:s,decls:1,vars:0,template:function(t,r){1&t&&(e.F$t(),e.Hsn(0))},dependencies:[a.ez],styles:["[_nghost-%COMP%]{display:block;color:var(--c-main);font-size:2em;margin:.75em 0 .75em .5em}"],changeDetection:0}),n})(),d=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["lab-git"]],standalone:!0,features:[e.jDz],decls:50,vars:0,consts:[["href","https://www.atlassian.com/git/tutorials/merging-vs-rebasing"]],template:function(t,r){1&t&&(e.TgZ(0,"ui-title"),e._uU(1,"Git notes"),e.qZA(),e.TgZ(2,"ui-heading"),e._uU(3,"Getting main branch into feature branch"),e.qZA(),e.TgZ(4,"ui-paragraph"),e._uU(5,"Merge"),e.qZA(),e.TgZ(6,"ui-code"),e._uU(7," git checkout feature/branch"),e._UZ(8,"br"),e._uU(9," git merge main\n"),e.qZA(),e.TgZ(10,"ui-paragraph"),e._uU(11," It creates a new commit with changes from "),e.TgZ(12,"i"),e._uU(13,"main"),e.qZA(),e._uU(14," branch. Safe but merging commit may look unnecessarily. "),e.TgZ(15,"a",0),e._uU(16," More info "),e.qZA(),e._UZ(17,"br")(18,"br"),e.qZA(),e.TgZ(19,"ui-paragraph"),e._uU(20,"Rebase"),e.qZA(),e.TgZ(21,"ui-code"),e._uU(22," git checkout feature/branch"),e._UZ(23,"br"),e._uU(24," git rebase main\n"),e.qZA(),e.TgZ(25,"ui-paragraph"),e._uU(26," It removes "),e.TgZ(27,"i"),e._uU(28,"feature/branch"),e.qZA(),e._uU(29," commits, pulls changes from "),e.TgZ(30,"i"),e._uU(31,"main"),e.qZA(),e._uU(32," branch and then recreates "),e.TgZ(33,"i"),e._uU(34,"feature/branch"),e.qZA(),e._uU(35," commits. So "),e.TgZ(36,"i"),e._uU(37,"feature/branch"),e.qZA(),e._uU(38," commits are always in the end of the branch. Since it recreates commits this approach should be used with local private branches only. If feature branch is pushed already - use merge instead. "),e.TgZ(39,"a",0),e._uU(40," More info "),e.qZA(),e._UZ(41,"br")(42,"br"),e.qZA(),e.TgZ(43,"ui-paragraph"),e._uU(44,"Conclusion"),e.qZA(),e.TgZ(45,"ui-paragraph"),e._uU(46," It looks safer to use "),e.TgZ(47,"b"),e._uU(48,"merge"),e.qZA(),e._uU(49," all the time. Otherwise before using rebase it should always be checked if the branch is not pushed yet.\n"),e.qZA())},dependencies:[a.ez,u,p,m,l],styles:["[_nghost-%COMP%]{display:block}"],changeDetection:0}),n})()}}]);